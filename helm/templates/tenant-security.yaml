---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tenant-security
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tenant-security
rules:
  - apiGroups: ["","rbac.istio.io","security.istio.io"]
    resources: ["*"]
    verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tenant-security
subjects:
  - kind: ServiceAccount
    name: tenant-security
roleRef:
  kind: Role
  name: tenant-security
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-security
  labels:
    app: tenant-security
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: tenant-security
  template:
    metadata:
      labels:
        app: tenant-security
    spec:
      serviceAccountName: tenant-security
      containers:
        - name: tenant-security
          image: tenant-security:1.0.0
          imagePullPolicy: Always
          env:
            - name: MONGO_URI
              value: mongodb://{{ .Values.mongodb.fullnameOverride }}:27017/tenant-security
            - name: KEYCLOAK_URI
              value: http://{{ .Values.keycloak.fullnameOverride }}-http:80/auth
            - name: KEYCLOAK_SECRET
              value: {{ .Values.keycloak.keycloak.existingSecret }}
            - name: KEYCLOAK_SECRET_KEY
              value: {{ .Values.keycloak.keycloak.existingSecretKey }}
            - name: KEYCLOAK_REALM
              value: {{ .Values.realm }}
            - name: ISTIO_TENANT_ROLE
              value: tenant
            - name: INIT_USER_EMAIL
              value: {{ .Values.tenantSecurity.initialUser.email }}
            - name: INIT_USER_ROLE
              value: operator
            - name: INIT_USER_PASSWORD
              value: {{ .Values.tenantSecurity.initialUser.password }}
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
            limits:
              memory: 512Mi
              cpu: 2
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-security
  labels:
    app: tenant-security
spec:
  selector:
    app: tenant-security
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---